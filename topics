//topics to reach expert
https://docs.google.com/document/u/0/d/1Qmh_suVjBv0F3LFC5CfO06knn2zW92nfTyVlQLrUnFs/mobilebasic
RECURSIONS codes to remember:-
1.printing subsequence(pick or not pick)
2.printing subsequence whose sum is k
3.counting the subsequence whose sum is k
4.combination sum
5.combintation sum2
6.subset sum
7.subset sum2
8.print all permutations
9.nqueens
10.sudokusolver
11.mcoloring
12.palindrome portioning
13.kth permutation sequence
14.rat in a mazeac
-----------------------------------------------------------------------------------------------------------------------------------------------
1.big integer 
2.lcm,gcd,Euclidean algorithm,extended Euclidean algorithm 
3.sieves eratosthenes 
4.modulo arithmetic modulo exponentiation modulo inverse 
5.lucas theorem 
6.chinese remainder theorem 
7.series and subsequences
8.catalan number 
9.pigeonhole principle 
10.inclusion exclusion principle
------------------------------------------------------------------------------------------------------------------------------------------------
Number Theory - Sieve, primality test, fibonacci etc
Linear Algebra - Basic Matrices, multiplication, etc
Basic Algebra - Solving linear equations, finding unknown, etc
Statistics - Mean, Median, Variance, expected value
Basic Arithmetic concepts like mixtures, progressions, ratios, rational numbers, hcf / lcm etc.
Probability - Bayes' theorem, Probability distribution, etc
Co-ordinate Geometry - 2D, 3D space, distance between points, line equation, etc
Discrete Mathematics and Combinatorics - Arrangements, sorting, permutations
Principles like Pigeon Hole, Inclusion-Exclusion, Induction etc
That is just for starting. Once you are comfortable with competitive programming you can learn following advance topics :

Graph Theory - Path, Node, Colouring, Matching, Components, Flow, etc
Calculus - Variable Minimisation, Maximisation
Error Analysis and Estimation. This is important for only few tricky probs
Game Theory - Nim Game, Grundy Number, etc.
Fast Fourier Tranformation
Modular Arithmetic
----------------------------------------------------------------------------------------------------------------------------
Algebra
Fundamentals
Binary Exponentiation
Euclidean algorithm for computing the greatest common divisor
Extended Euclidean Algorithm
Linear Diophantine Equations
Fibonacci Numbers
Prime numbers
Sieve of Eratosthenes
Linear Sieve
Primality tests
Integer factorization
Number-theoretic functions
Euler's totient function
Number of divisors / sum of divisors
Modular arithmetic
Modular Inverse
Linear Congruence Equation
Chinese Remainder Theorem
Garner's Algorithm
Factorial modulo p
Discrete Log
Primitive Root
Discrete Root
Montgomery Multiplication
Number systems
Balanced Ternary
Gray code
Miscellaneous
Bit manipulation
Enumerating submasks of a bitmask
Arbitrary-Precision Arithmetic
Fast Fourier transform
Operations on polynomials and series
Continued fractions
Factoring Exponentiation
Data Structures
Fundamentals
Minimum Stack / Minimum Queue
Sparse Table
Trees
Disjoint Set Union
Fenwick Tree
Sqrt Decomposition
Segment Tree
Treap
Sqrt Tree
Randomized Heap
Advanced
Deleting from a data structure in O(T(n) log n)
Dynamic Programming
DP optimizations
Divide and Conquer DP
Knuth's Optimization
Tasks
Dynamic Programming on Broken Profile. Problem "Parquet"
Finding the largest zero submatrix
String Processing
Fundamentals
String Hashing
Rabin-Karp for String Matching
Prefix function - Knuth-Morris-Pratt
Z-function
Suffix Array
Aho-Corasick algorithm
Advanced
Suffix Tree
Suffix Automaton
Lyndon factorization
Tasks
Expression parsing
Manacher's Algorithm - Finding all sub-palindromes in O(N)
Finding repetitions
Linear Algebra
Matrices
Gauss & System of Linear Equations
Gauss & Determinant
Kraut & Determinant
Rank of a matrix
Combinatorics
Fundamentals
Finding Power of Factorial Divisor
Binomial Coefficients
Catalan Numbers
Techniques
The Inclusion-Exclusion Principle
Burnside's lemma / Pólya enumeration theorem
Stars and bars
Generating all K-combinations
Tasks
Placing Bishops on a Chessboard
Balanced bracket sequences
Counting labeled graphs
Numerical Methods
Search
Binary Search
Ternary Search
Newton's method for finding roots
Integration
Integration by Simpson's formula
Geometry
Elementary operations
Basic Geometry
Finding the equation of a line for a segment
Intersection Point of Lines
Check if two segments intersect
Intersection of Segments
Circle-Line Intersection
Circle-Circle Intersection
Common tangents to two circles
Length of the union of segments
Polygons
Oriented area of a triangle
Area of simple polygon
Check if points belong to the convex polygon in O(log N)
Minkowski sum of convex polygons
Pick's Theorem - area of lattice polygons
Lattice points of non-lattice polygon
Convex hull
Convex hull construction
Convex hull trick and Li Chao tree
Sweep-line
Search for a pair of intersecting segments
Point location in O(log N)
Miscellaneous
Finding the nearest pair of points
Delaunay triangulation and Voronoi diagram
Vertical decomposition
Half-plane intersection - S&I Algorithm in O(N log N)
Graphs
Graph traversal
Breadth First Search
Depth First Search
Connected components, bridges, articulations points
Finding Connected Components
Finding Bridges in O(N+M)
Finding Bridges Online
Finding Articulation Points in O(N+M)
Strongly Connected Components and Condensation Graph
Strong Orientation
Single-source shortest paths
Dijkstra - finding shortest paths from given vertex
Dijkstra on sparse graphs
Bellman-Ford - finding shortest paths with negative weights
0-1 BFS
D´Esopo-Pape algorithm
All-pairs shortest paths
Floyd-Warshall - finding all shortest paths
Number of paths of fixed length / Shortest paths of fixed length
Spanning trees
Minimum Spanning Tree - Prim's Algorithm
Minimum Spanning Tree - Kruskal
Minimum Spanning Tree - Kruskal with Disjoint Set Union
Second best Minimum Spanning Tree - Using Kruskal and Lowest Common Ancestor
Kirchhoff Theorem
Prüfer code
Cycles
Checking a graph for acyclicity and finding a cycle in O(M)
Finding a Negative Cycle in the Graph
Eulerian Path
Lowest common ancestor
Lowest Common Ancestor
Lowest Common Ancestor - Binary Lifting
Lowest Common Ancestor - Farach-Colton and Bender algorithm
Solve RMQ by finding LCA
Lowest Common Ancestor - Tarjan's off-line algorithm
Flows and related problems
Maximum flow - Ford-Fulkerson and Edmonds-Karp
Maximum flow - Push-relabel algorithm
Maximum flow - Push-relabel algorithm improved
Maximum flow - Dinic's algorithm
Maximum flow - MPM algorithm
Flows with demands
Minimum-cost flow
Assignment problem
Matchings and related problems
Bipartite Graph Check
Kuhn's Algorithm - Maximum Bipartite Matching
Miscellaneous
Topological Sorting
Edge connectivity / Vertex connectivity
Tree painting
2-SAT
Heavy-light decomposition
Miscellaneous
Sequences
RMQ task (Range Minimum Query - the smallest element in an interval)
Longest increasing subsequence
Search the subsegment with the maximum/minimum sum
K-th order statistic in O(N)
MEX task (Minimal Excluded element in an array)
Game Theory
Games on arbitrary graphs
Sprague-Grundy theorem. Nim
Schedules
Scheduling jobs on one machine
Scheduling jobs on two machines
Optimal schedule of jobs given their deadlines and durations
Miscellaneous
Josephus problem
15 Puzzle Game: Existence Of The Solution
The Stern-Brocot Tree and Farey Sequences
